-- 동물 테이블
-- 이름, 나이, 색

CREATE SEQUENCE SEQ_ANIMAL
START WITH 1 -- 1부터 10씩 증가
INCREMENT BY 10;


CREATE TABLE TBL_ANIMAL(
	ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
	ANIMAL_NAME VARCHAR2(255) NOT NULL UNIQUE,
	ANIMAL_AGE NUMBER DEFAULT 0,
	ANIMAL_COLOR VARCHAR2(255)
);


INSERT INTO TBL_ANIMAL
VALUES(SEQ_ANIMAL.NEXTVAL, '진도니', 5, '갈색');

INSERT INTO TBL_ANIMAL
VALUES(SEQ_ANIMAL.NEXTVAL, '치즈', 5, '주황색');

SELECT * FROM TBL_PET;

-- 컬럼 이름 변경
-- RENAME A TO B: 테이블의 이름을 변경
-- RENAME COLUMN A TO B: 테이블의 컬럼 이름 변경
ALTER TABLE TBL_ANIMAL RENAME COLUMN ANIMAL_NAME TO ANIMAL_SPECIES;
ALTER TABLE TBL_ANIMAL RENAME TO TBL_PET;

-- 테이블이 바뀌면 컬럼명도 모두 바꿔야 한다.
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_SPECIES TO PET_SPECIES;
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_AGE TO PET_AGE;
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_COLOR TO PET_COLOR;

-- 시퀀스 이름 변경
RENAME SEQ_ANIMAL TO SEQ_PET;

-- PK는 이름을 바로 바꿀 수 없다
-- PK를 삭제하고, 다시 추가해야한다.
-- 단 FK가 참조하고 있는 경우 삭제할 수 없다.

-- DROP CONSTRAINT : 제약조건 삭제
ALTER TABLE TBL_PET DROP CONSTRAINT PK_ANIMAL;

-- 추가
ALTER TABLE TBL_PET ADD CONSTRAINT PK_PET PRIMARY KEY(ID);

DROP TABLE TBL_PET;

CREATE TABLE TBL_PET(
	ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
	PET_NAME VARCHAR2(255) NOT NULL UNIQUE,
	PET_AGE NUMBER DEFAULT 0,
	PET_COLOR VARCHAR2(255)
);

SELECT * FROM TBL_PET;


-- 자동차 테이블
-- 자동차 번호
-- 자동차 브랜드
-- 자동차 출시 날짜
-- 색상
-- 가격


CREATE SEQUENCE SEQ_CAR; 
CREATE TABLE TBL_CAR(
	ID NUMBER CONSTRAINT PK_CAR PRIMARY KEY,
	CAR_NUMBER NUMBER NOT NULL UNIQUE,
	CAR_BRAND VARCHAR2(255) NOT NULL,
	CAR_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CAR_COLOR VARCHAR2(255) NOT NULL,
	CAR_PRICE NUMBER NOT NULL
);

SELECT * FROM TBL_CAR;

DROP TABLE TBL_CAR;

INSERT INTO TBL_CAR(ID, CAR_NUMBER, CAR_BRAND, CAR_COLOR, CAR_PRICE)
VALUES(SEQ_CAR.NEXTVAL, 5245, '현대', '블랙', 2000000);


-- 유저 테이블, 게시글 테이블
-- 게시글에서 FK로 유저의 PK를 참조
-- 유저 : 게시글  -> 1 : 다(FK)

CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_NAME VARCHAR2(255),
	USER_AGE NUMBER
);

CREATE SEQUENCE SEQ_POST;
CREATE TABLE TBL_POST(
	ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
	POST_TITLE VARCHAR2(255)NOT NULL,
	POST_CONTENT VARCHAR2(255)NOT NULL,
	USER_ID NUMBER, 
	-- POST가 USER을 참조함
	CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

SELECT * FROM TBL_USER;
SELECT * FROM TBL_POST;

-- 요구사항
-- 회사에서 광고를 신청하려고 합니다.
-- 회사와 광고 테이블을 만들어주세요.
-- 신청 테이블도 만들어야 함

-- 회사, 광고
-- 신청 (회사 fk, 광고 fk)


CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(255) UNIQUE NOT NULL,
	COMPANY_PHONE VARCHAR2(255) NOT NULL,
	COMPANY_ADDRESS VARCHAR2(255)
);

CREATE SEQUENCE SEQ_ADVERTISEMENT;
CREATE TABLE TBL_ADVERTISEMENT(
	ID NUMBER CONSTRAINT PK_ADVERTISEMENT PRIMARY KEY
	ADVERTISEMENT_TITLE	VARCHAR2(255) NOT NULL,
	ADVERTISEMENT_CONTENT VARCHAR2(255) NOT NULL 
	
);

CREATE SEQUENCE SEQ_ADVER_FORM;
CREATE TABLE TBL_ADVER_FORM(
	ID NUMBER CONSTRAINT PK_ADVER_FORM PRIMARY KEY,
	COMPANY_ID NUMBER,
	ADVERTISEMENT ID NUMBER,
	CONSTRAINT FK_ADVER_FORM_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID);
)

-- 요구사항 
-- 회원이 존재하고 회원은 여러 상품을 구매할 수 있습니다.
-- 데이터 베이스 시스템을 만들어주세요

-- 회원 테이블
CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_NAME VARCHAR2(255) NOT NULL,
	USER_AGE NUMBER NOT NULL,
	USER_GRADE VARCHAR2(255) NOT NULL
);

-- 상품 테이블
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(255) NOT NULL UNIQUE,
	PRODUCT_PRICE NUMBER NOT NULL
); 

-- 구매 테이블
CREATE SEQUENCE SEQ_PURCHASE;
CREATE TABLE TBL_PURCHASE(
	ID NUMBER CONSTRAINT PK_PURCHASE PRIMARY KEY,
	
	USER_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_PURCHASE_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_PURCHASE_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);


INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, '박지성', 45, '골드');
INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, '손흥민', 34, '실버');

INSERT INTO TBL_PRODUCT 
VALUES(SEQ_PRODUCT.NEXTVAL, '닌텐도', 200000 );
INSERT INTO TBL_PRODUCT 
VALUES(SEQ_PRODUCT.NEXTVAL, '선풍기', 500000);

SELECT * FROM TBL_USER;
SELECT * FROM TBL_PRODUCT;
SELECT * FROM TBL_PURCHASE;


-- 요구사항
-- 상품 판매자, 상품 구매자, 배송

-- 상품 판매자
-- 음료, 음료 종류, 음료 크기, 만든 날짜
CREATE SEQUENCE SEQ_SELLER;
CREATE TABLE TBL_SELLER(
	ID NUMBER CONSTRAINT PK_SELLER PRIMARY KEY,
	SELLER_SORT VARCHAR2(255) UNIQUE NOT NULL,
	SELLER_SIZE VARCHAR2(255) NOT NULL,
	SELLER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 상품 구매자
-- 이름, 전화번호, 주소
CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
	ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
	BUYER_NAME VARCHAR2(255) UNIQUE NOT NULL,
	BUYER_PHONE VARCHAR2(255) DEFAULT '000-0000-0000',
	BUYER_ADDRESS VARCHAR2(255) NOT NULL
);


-- 배송
-- 판매자가 구매자에게 배송하는 기능
-- 배송 기간
-- 배송 비용
-- 배송 상태, 배송 시작 시간, 배송 완료 시간

CREATE SEQUENCE SEQ_DELIVERY;
CREATE TABLE TBL_DELIVERY(
	ID NUMBER CONSTRAINT PK_DELIVERY PRIMARY KEY,
	SELLER_ID NUMBER,
	BUYER_ID NUMBER,
	DELIVERY_PERIOD VARCHAR2(255) NOT NULL,
	DELIVERY_COST NUMBER NOT NULL,
	CONSTRAINT FK_DELIVERY_SELLER FOREIGN KEY(SELLER_ID)
	REFERENCES TBL_SELLER(ID),
	CONSTRAINT FK_DELIVERY_BUYER FOREIGN KEY(BUYER_ID)
	REFERENCES TBL_BUYER(ID)
);

SELECT * FROM TBL_BUYER;
SELECT * FROM TBL_SELLER;
SELECT * FROM TBL_DELIVERY;


-- 사용자(TBL_GOODS_USER)
-- 굿즈(TBL_GOODS)
-- 선물하기(TBL_GIFTS)

-- 선물하기로 1대다로 만들어줘야함 

-- 사용자 : 이름, 연락처, 주소
-- 굿즈 : 상품명, 가격, 재고, 제작시간

-- 사용자
CREATE SEQUENCE SEQ_GOODS_USER;
CREATE TABLE TBL_GOODS_USER(
	ID NUMBER CONSTRAINT PK_GOODS_USER PRIMARY KEY,
	GOODS_USER_NAME VARCHAR2(255) UNIQUE NOT NULL,
	GODDS_USER_PHONE VARCHAR2(255) NOT NULL ,
	GOODS_USER_ADDRESS VARCHAR2(255) NOT NULL
);

-- 굿즈
CREATE SEQUENCE SEQ_GOODS;
CREATE TABLE TBL_GOODS(
	ID NUMBER CONSTRAINT PK_GOODS PRIMARY KEY,
	GOODS_NAME VARCHAR2(255) UNIQUE NOT NULL,
	GOODS_PRICE NUMBER NOT NULL,
	GOODS_STOCK CHAR(10) ,
	GOODS_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 선물하기(TBL_GIFTS)
CREATE SEQUENCE SEQ_GIFTS;
CREATE TABLE TBL_GIFTS(
	ID NUMBER CONSTRAINT PK_GIFTS PRIMARY KEY,
	GOODS_USER_ID NUMBER,
	GOODS_ID NUMBER,
	GIFTS_MESSAGE VARCHAR2(255) NOT NULL,
	CONSTRAINT FK_GIFTS_GOODS_USER FOREIGN KEY(GOODS_USER_ID)
	REFERENCES TBL_GOODS_USER(ID),
	CONSTRAINT FK_GIFTS_GOODS FOREIGN KEY(GOODS_ID)
	REFERENCES TBL_GOODS(ID)
);


/*
요구사항
   유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
   아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
   체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
   아이들은 여러 번 체험학습에 등록할 수 있어요.
*/



-- 아이
CREATE SEQUENCE SEQ_KIDS;
CREATE TABLE TBL_KIDS(
	ID NUMBER CONSTRAINT PK_KIDS PRIMARY KEY,
	KIDS_NAME VARCHAR2(255) NOT NULL,
	KIDS_AGE NUMBER NOT NULL,
	KIDS_GENDER VARCHAR2(255) NOT NULL
);
-- 부모(FK)
CREATE SEQUENCE SEQ_PARENTS;
CREATE TABLE TBL_PARENTS(
	ID NUMBER CONSTRAINT PK_PARENTS  PRIMARY KEY,
	PARENTS_NAME VARCHAR2(255) NOT NULL,
	PARENTS_AGE NUMBER NOT NULL,
	PARENTS_ADDRESS VARCHAR2(255) NOT NULL,
	PARENTS_PHONE VARCHAR2(255) NOT NULL,
	PARENTS_GENDER VARCHAR2(255) NOT NULL
	KIDS_ID NUMBER,
	CONSTRAINT FK_PARENTS_KIDS FOREIGN KEY(KIDS_ID)
	REFERENCES TBL_KIDS(ID)
);
-- 체험학습 : 제목, 체험학습 내용, 이미지(없어도 됨)
CREATE SEQUENCE SEQ_TRIP;
CREATE TABLE TBL_TRIP(
	IN NUMBER CONSTRAINT PK_PARENTS PRIMARY KEY,
	TRIP_TITLE VARCHAR2(255) NOT NULL,
	TRIP_CONTENTS VARCHAR2(255) NOT NULL,
	TRIP_EVENT_IMAGE NUMBER NOT NULL
);

-- 체험학습 이미지(FK)
CREATE SEQUENCE SEQ_TRIP_FILE;
CREATE TABLE TBL_TRIP_FILE(
	IN NUMBER CONSTRAINT PK_TRIP_FILE PRIMARY KEY,
	TRIP_FILE_NAME VARCHAR2(255) NOT NULL,
	TRIP_ID NUMBER,
	CONSTRAINT FK_TRIP_FILE_TRIP FOREIGN KEY(TRIP_ID)
	REFERENCES TBL_TRIP(ID);
);

-- 신청(FK) - 체험학습, 아이를 FK로 가져야함
CREATE SEQUENCE SEQ_SIGN_UP;
CREATE TABLE TBL_SIGN_UP(
	IN NUMBER CONSTRAINT PK_SIGN_UP PRIMARY KEY,
	KIDS_ID NUMBER,
	CONSTRAINT FK_SIGN_UP_KIDS FOREIGN KEY(KIDS_ID)
	REFERENCES TBL_KIDS(ID)
);

-- 아이 : 이름, 나이, 성별
-- 학부모 : 이름, 나이, 주소, 전화번호, 성별
-- 체험학습 : 제목, 내용, 이벤트 이미지

-- 하나의 아이는 여러개의 체험학습에 등록할 수 있음


-- 누가 FK를 갖고 있어야 하나
-- 몇 대 몇 관계인가

-- 아이 테이블 : 이름, 나이, 성별
CREATE SEQUENCE SEQ_KIDS;
CREATE TABLE TBL_KIDS(
	ID NUMBER CONSTRAINT PK_KIDS PRIMARY KEY,
	KIDS_NAME VARCHAR2(255) NOT NULL,
	KIDS_AGE NUMBER NOT NULL,
	KIDS_GENDER VARCHAR2(255) NOT NULL
);

-- 부모 테이블 : 이름, 나이, 주소 ,전화번호, 성별
CREATE SEQUENCE SEQ_PARENTS;
CREATE TABLE TBL_PARENTS(
	ID NUMBER CONSTRAINT PK_PARENTS  PRIMARY KEY,
	PARENTS_NAME VARCHAR2(255) NOT NULL,
	PARENTS_AGE NUMBER NOT NULL,
	PARENTS_ADDRESS VARCHAR2(255) NOT NULL,
	PARENTS_PHONE VARCHAR2(255) NOT NULL,
	PARENTS_GENDER VARCHARR2(255) NOT NULL
);

-- 체험학습 테이블 : 제목 , 내용, 이벤트 이미지
CREATE SEQUENCE SEQ_TRIP;
CREATE TABLE TBL_TRIP(
	IN NUMBER CONSTRAINT PK_PARENTS PRIMARY KEY,
	TRIP_TITLE VARCHAR2(255) NOT NULL,
	TRIP_CONTENTS VARCHAR2(255) NOT NULL,
	TRIP_EVENT_IMAGE NUMBER NOT NULL
);

-- 신청 테이블
CREATE SEQUENCE SEQ_SIGN_UP;
CREATE TABLE TBL_SIGN_UP(
	IN NUMBER CONSTRAINT PK_SIGN_UP PRIMARY KEY,
	KIDS_ID NUMBER,
	CONSTRAINT FK_SIGN_UP_KIDS FOREIGN KEY(KIDS_ID)
	REFERENCES TBL_KIDS(ID)
);

--	CONSTRAINT FK_GIFTS_GOODS FOREIGN KEY(GOODS_ID)
--	REFERENCES TBL_GOODS(ID)

-- 1 : N  ->  아이들은 여러 번 체험학습에 등록할 수 있어요.

/*
   요구사항
   유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
   아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
   체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
   아이들은 여러 번 체험학습에 등록할 수 있어요.
*/

-- 아이 : 체험학습 m:n
-- 신청(아이 fk, 체험학습 fk)
-- 부모(아이 fk)
-- 이벤트 이미지(체험학습 fk)


-- 아이
-- 학부모
-- 체험학습
-- 신청
-- 이벤트 이미지

-- 아이 
CREATE SEQUENCE SEQ_CHILD;
CREATE TABLE TBL_CHILD(
   ID NUMBER CONSTRAINT PK_CHILD PRIMARY KEY,
   CHILD_NAME VARCHAR2(255) NOT NULL,
   CHILD_AGE NUMBER,
   CHILD_GENDER CHAR(5)
);

-- 부모 FK
-- 이름, 나이, 주소, 전화번호, 성별
CREATE SEQUENCE SEQ_PARENT;
CREATE TABLE TBL_PARENT(
   ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
   PARENT_NAME VARCHAR2(255) NOT NULL,
   PARENT_AGE NUMBER,
   PARENT_ADDRESS VARCHAR2(255),
   PARENT_PHONE VARCHAR2(255) NOT NULL,
   PARNET_GENDER CHAR(5),
   CHILD_ID NUMBER,
   CONSTRAINT FK_PARENT_CHILD FOREIGN KEY(CHILD_ID)
   REFERENCES TBL_CHILD(ID)
);

-- 체험학습
-- 제목, 체험학습 내용
CREATE SEQUENCE SEQ_FIELD_TRIP;
CREATE TABLE TBL_FIELD_TRIP(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP PRIMARY KEY,
   FIELD_TRIP_TITLE VARCHAR2(255),
   FIELD_TRIP_CONTENT VARCHAR2(255),
   FIELD_TRIP_NUMBER NUMBER
);

-- 체험학습 이미지 FK
CREATE SEQUENCE SEQ_FIELD_TRIP_FILE;
CREATE TABLE TBL_FIELD_TRIP_FILE(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP_FILE PRIMARY KEY,
   FIELD_TRIP_FILE_NAME VARCHAR2(255),
   FIELD_TRIP_FILE_PATH VARCHAR2(255),
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_FIELD_TRIP_FILE_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
);
-- 신청 FK
CREATE SEQUENCE SEQ_APPLY;
CREATE TABLE TBL_APPLY(
   ID NUMBER CONSTRAINT PK_APPLY PRIMARY KEY,
   APPLY_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   CHILD_ID NUMBER,
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_APPLY_CHILD FOREIGN KEY(CHILD_ID)
   REFERENCES TBL_CHILD(ID),
   CONSTRAINT FK_APPLY_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
);


/*

요구사항

안녕하세요, 광고 회사를 운영하려고 준비중인 사업가입니다.
광고주는 기업이고 기업 정보는 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)입니다.
광고는 제목, 내용이 있고 기업은 여러 광고를 신청할 수 있습니다.
기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리(대 fk), 소카테고리(중 fk)가 있습니다.

*/


-- 기업1
-- 광고1
-- 신청(기업 fk, 광고 fk)

-- 대카테고리(광고 fk)
-- 중카테고리(대카테고리 fk)
-- 소카테고리(중카테고리 fk)


-- 대카테고리 FK
CREATE SEQUENCE SEQ_TBL_CATEGORY_A;
CREATE TABLE TBL_CATEGORY_A(
   ID NUMBER CONSTRAINT PK_CATEGORY_A PRIMARY KEY,
   CATEGORY_A_NAME VARCHAR2(255) NOT NULL,
   ADVERTISEMENT_ID NUMBER,
   CONSTRAINT FK_CATEGORY_A_ADVERTISEMENT FOREIGN KEY(ADVERTISEMENT_ID)
   REFERENCES TBL_ADVERTISEMENT(ID)
);





-- 기업이 여러 광고를 신청할 수 있다

-- 기업
-- 광고(FK)


-- 카테고리(FK)
-- 기업종류(FK)

-- 기업, 광고
-- 기업이 여러 광고를 신청
-- 기업 : 광고 -> 1 : 다
-- 기업에는 기업종류(스타트업, 중소기업, 중견기업, 대기업)가 있음
-- 기업이 광고 [선택]할 때는 [카테고리] : 대카테고리, 중카테고리, 소카테고리

-- 기업 : 이름, 주소, 대표번호, 기업종류
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(255) NOT NULL,
	COMPANY_ADDRESS VARCHAR2(255) NOT NULL,
	COMPANY_NUMBER NUMBER UNIQUE,
	COMPANY_SORT VARCHAR2(255) NOT NULL
	CONSTRAINT BAN_TYPE CHECK(COMPANY_SORT IN ('스타트업', '중소기업')
);

-- 광고 : 제목, 내용(FK : 기업)
CREATE SEQUENCE SEQ_AD;
CREATE TABLE TBL_AD(
	ID NUMBER CONSTRAINT PK_AD PRIMARY KEY,
	COMPANY_ID NUMBER, -- 기업 FK 
	AD_TITLE VARCHAR2(255) NOT NULL,
	AD_CONTENTS VARCHAR2(255) NOT NULL,
	CONSTRAINT FK_AD_COMPANY FOREIGN KEY(COMPANY_ID)	
	REFERENCES TBL_COMPANY(ID)
);

-- 대카테고리 FK

-- 중카테고리가 대카테고리를 참조
-- 소카테고리가 중카테고리를 참조

-- 신청 : 회사, 광고 
CREATE SEQUENCE SEQ_APPLY;
CREATE TABLE TBL_APPLY(
	ID NUMBER CONSTRAINT PK_APPLY PRIMARY KEY,
	AD_ID NUMBER NOT NULL,
	COMPANY_ID NUMBER NOT NULL,
	CONSTRAINT FK_APPLY_AD FOREIGN KEY(AD_ID)
	REFERENCES TBL_AD(ID),
	CONSTRAINT FK_APPLY_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID)
);



