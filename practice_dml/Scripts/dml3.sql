CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
   ID NUMBER,
   PRODUCT_NAME VARCHAR2(255) NOT NULL,
   PRODUCT_PRICE NUMBER DEFAULT 0,
   PRODUCT_STOCK NUMBER DEFAULT 0,
   CONSTRAINT PK_PRODUCT PRIMARY KEY(ID)
);

CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
   ID NUMBER,
   PRODUCT_ID NUMBER,
   ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   CONSTRAINT PK_ORDER PRIMARY KEY(ID),
   CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);

INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '맥북', 1500000, 20);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '모니터', 242000, 10);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, 'TV', 385000, 15);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '공기청정기', 710033, 30);

INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 1);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 4);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 1);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 1);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 2);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 2);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3);
INSERT INTO TBL_ORDER(ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3);

SELECT * FROM TBL_ORDER;

SELECT *
FROM TBL_PRODUCT;

--[요구사항조건]
--모든 결과 테이블은 알리아스(ALIAS)를 명확히 사용한다.
--평균값보다 이상, 이하의 조건으로 SQL문을 작성할 때에는
--FLOOR로 내림 값을 기준으로 한다.


-- 1번. 상품의 평균 재고 수 조회
SELECT FLOOR(AVG(PRODUCT_STOCK)) AS "평균 재고 수"
FROM TBL_PRODUCT;

-- 2번. 맥북을 구매한 주문의 개수 조회
SELECT COUNT(*) AS "맥북 주문 개수"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE PRODUCT_NAME = '맥북';


-- 3번. 가장 많이 주문한 상품 1개의 모든 정보 조회
SELECT *
FROM TBL_PRODUCT 
WHERE ID = (
	SELECT PRODUCT_ID 
	FROM TBL_ORDER TBO
	JOIN TBL_PRODUCT TBP 
	ON TBO.PRODUCT_ID = TBP.ID
	GROUP BY PRODUCT_ID
	ORDER BY PRODUCT_ID DESC
	FETCH FIRST 1 ROWS ONLY
);


SELECT *
FROM TBL_ORDER;

-- 4번. 평균 재고 이상 재고를 가진 상품의 모든 정보 조회
SELECT ID AS "평균 재고 이상 재고를 가진 상품의 ID" ,
PRODUCT_PRICE AS "상품 가격", PRODUCT_NAME AS "상품명"1, PRODUCT_STOCK AS "상품재고" 
FROM TBL_PRODUCT
WHERE PRODUCT_STOCK >= (
	SELECT FLOOR(AVG(PRODUCT_STOCK))
	FROM TBL_PRODUCT
);


-- 5번. 주분정보에서 공기청정기 주문정보 중 주문 날짜만 조회
SELECT ORDER_DATE AS "공기청정기 주문정보에 대한 주문 날짜"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE PRODUCT_NAME = '공기청정기';


-- 6번. 판매중인 상품의 평균 가격을 소수점 2자리 수 까지 조회
SELECT ROUND(AVG(PRODUCT_PRICE),2) AS "상품 평균 가격"
FROM TBL_PRODUCT;


-- 7번. 상품의 재고가 제일 작은 상품 1개 이름과 재고 조회
SELECT PRODUCT_NAME AS "재고 제일 작은 상품 이름", PRODUCT_STOCK AS "재고"
FROM TBL_PRODUCT
ORDER BY PRODUCT_STOCK ASC
FETCH FIRST 1 ROWS ONLY;

-- 8번. TV 주문 정보 ORDER_ID만 조회
SELECT TBO.ID AS "TV 주문 정보 ORDER_ID"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE PRODUCT_NAME = 'TV';

-- 9번. 상품의 가격 중 제일 비싼 상품의 이름과 가격 조회
SELECT PRODUCT_NAME AS "상품 이름" , PRODUCT_PRICE || '원' AS "상품 가격" 
FROM TBL_PRODUCT
ORDER BY PRODUCT_PRICE DESC
FETCH FIRST 1 ROWS ONLY;


-- 10번. 가장 인기 없는 상품의 이름 조회
SELECT PRODUCT_NAME AS "상품 이름"
FROM (
	SELECT PRODUCT_ID
	FROM TBL_ORDER TBO
	GROUP BY PRODUCT_ID
	ORDER BY COUNT(PRODUCT_ID) ASC
	) TBO
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID
FETCH FIRST 1 ROWS ONLY;




